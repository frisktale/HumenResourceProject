<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frisk.hrs.mapper.RewardsMapper">
    <resultMap id="BaseResultMap" type="com.frisk.hrs.pojo.Rewards">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="employee_id" jdbcType="INTEGER" property="employeeId"/>
        <result column="is_delete" jdbcType="TINYINT" property="isDelete"/>
        <result column="money" jdbcType="DOUBLE" property="money"/>
    </resultMap>

    <sql id="CustomSelect">
        <if test="content!=null">
            and content like #{content}
        </if>
        <if test="employeeId!=null">
            and employee_id = #{employeeId}
        </if>
        <if test="rewardsOrPunishment!=null">
            <choose>
                <when test="rewardsOrPunishment">
                    and money &gt; 0
                </when>
                <otherwise>
                    and money &lt; 0
                </otherwise>
            </choose>
        </if>
        <if test="timeInYearMonth!=null">
            and DATE_FORMAT(time,'%Y%m') = #{timeInYearMonth}
        </if>
        <if test="timeInYearMonthDay!=null">
            and DATE_FORMAT(time,'%Y%m%d') = #{timeInYearMonthDay}
        </if>
        and is_delete=false
    </sql>

    <insert id="insertRewards">
        insert into rewards (time, content, employee_id,money)
        values (
                #{time}, #{content}, #{employeeId},#{money}
                   );
    </insert>
    <update id="updateRewards">
        update rewards
        <set>
            <if test="content!=null">
                content = #{content},
            </if>
            <if test="employeeId!=null">
                employee_id = #{employeeId},
            </if>
            <if test="time!=null">
                time = #{time},
            </if>
            <if test="money!=null">
                money = #{money},
            </if>
        </set>
        where id =#{id}
    </update>
    <delete id="deleteList">
        delete from rewards  where id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete><!--
    <update id="deleteList">
        update rewards set is_delete = true where id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>-->
    <update id="recoverRewards">
        update rewards set is_delete = false where id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <delete id="cleanRewards">
        delete
        from rewards
        where is_delete = true
    </delete>


    <select id="findRewardsByIdBase" resultMap="BaseResultMap">
        select *
        from rewards
        where id = #{id}
    </select>
    <select id="findRewardsByCustom" resultMap="BaseResultMap">
        select * from rewards
        <where>
            <include refid="CustomSelect"/>
        </where>
    </select>
    <select id="showDelete" resultMap="BaseResultMap">
        select *
        from rewards
        where is_delete = true;
    </select>
    <select id="getTotalMoneyByCustom" resultType="double">
        SELECT COALESCE(SUM(money), 0)
        FROM rewards
        <where>
            <include refid="CustomSelect"/>
        </where>
    </select>


</mapper>